{"version":3,"file":"static/js/cast.d27ba482.chunk.js","mappings":"mOAkCA,EA7BiB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KAGjB,OACG,wBAEIA,EAAKA,KAAKC,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,GAAIC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,KAAhC,OAA2C,2BAEvD,gBAAKC,IACLJ,EAAY,0CAE6BA,GAEnCK,EAEJC,MAAM,SACR,uBAAIH,KACJ,uCAAeD,OAXiDD,SCiB5E,EAvBa,WACV,OAAwBM,EAAAA,EAAAA,UAAS,MAAjC,eAAOT,EAAP,KAAaU,EAAb,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QAaP,OAVAE,EAAAA,EAAAA,YAAU,WACFF,GAGLG,MAAM,sCAAD,OAAuCH,EAAvC,qEACDI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIR,EAAQQ,QACzB,KAIA,8BAEClB,IAAQ,SAAC,EAAD,CAAUA,KAAMA,Q","sources":["component/CastList/CastList.jsx","component/Cast/Cast.jsx"],"sourcesContent":["import { width } from \"@mui/system\";\r\nimport defaultImg from '../../images/noImageAvailable.jpg'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst CastList = ({ cast }) => {\r\n   // const res = (cast.cast)\r\n   // console.log(cast.cast)\r\n   return (\r\n      <ul>\r\n        \r\n         {cast.cast.map(({ profile_path, id, character, name }) => <li key={id}>\r\n\r\n            <img src={\r\n            profile_path ?\r\n               \r\n                  `https://image.tmdb.org/t/p/w500/${profile_path}`\r\n                  :\r\n                  defaultImg\r\n            \r\n            } width='200' />\r\n            <p>{name}</p>\r\n            <p>Character: {character}</p>\r\n           \r\n         </li>)}\r\n         \r\n      </ul>\r\n      )\r\n}\r\n\r\nCastList.propTypes = {\r\n   cast: PropTypes.object.isRequired\r\n}\r\n\r\nexport default CastList;","import { useParams } from \"react-router-dom\"\r\nimport { useState, useEffect } from \"react\"\r\nimport CastList from '../CastList'\r\n\r\n\r\nconst Cast = () => {\r\n   const [cast, setCast] = useState(null)\r\n   const {movieId} = useParams()\r\n   // console.log(movieId)\r\n\r\n   useEffect(() => {\r\n      if (!movieId) {\r\n         return\r\n      }\r\n      fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=0754829cbe2d4a3d2043b315bf2671de&language=en-US`)\r\n         .then(response => response.json())\r\n         .then(data => setCast(data))\r\n   }, [])\r\n\r\n\r\n   return (\r\n      <>\r\n      \r\n      {cast && <CastList cast={cast}/>}\r\n      </>\r\n   )\r\n}\r\n\r\nexport default Cast;"],"names":["cast","map","profile_path","id","character","name","src","defaultImg","width","useState","setCast","movieId","useParams","useEffect","fetch","then","response","json","data"],"sourceRoot":""}