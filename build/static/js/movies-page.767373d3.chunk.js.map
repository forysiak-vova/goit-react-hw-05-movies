{"version":3,"file":"static/js/movies-page.767373d3.chunk.js","mappings":"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","sources":["component/HomePageItem/HomePageItem.styles.js","component/HomePageItem/HomePageItem.jsx","component/HomePageList/HomePage.styles.js","component/HomePageList/HomePageList.jsx","component/MoviesForm/MoviesForm.styles.js","component/MoviesForm/MoviesForm.jsx","view/MoviesPage/MoviesPage.styles.js","view/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const Item = styled(Link)`\r\nbackground-color:grey;\r\nborder-radius: 6px;\r\n transform: scale(1);\r\n text-decoration: none;\r\n &:hover,\r\n &:focus{\r\n     transform: scale(1.05);\r\n      transition-duration: 500ms;\r\n }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\ndisplay: flex;\r\ntext-align: center;\r\naline-items: center;\r\njustify-content: center;\r\nfont-size:22px;\r\ncolor: #fff;\r\n`;\r\n\r\nexport const Img = styled.img`\r\nwidth: 100%;\r\nheight: 80%;\r\nborder-radius: 6px;\r\n`; ","import { Item, Title, Img } from './HomePageItem.styles'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst non = 'default name'\r\nconst HomePageItem = ({ poster_path, title, id }) => {\r\n   return (<Item to={`/movies/${id}`} >\r\n                  <Img src={poster_path} alt={title} />\r\n                  <Title>{title ? title : non}</Title>\r\n   </Item>)\r\n}\r\n\r\nHomePageItem.propTypes = {\r\n   poster_path: PropTypes.string.isRequired,\r\n   title: PropTypes.string.isRequired,\r\n   id: PropTypes.number.isRequired\r\n}\r\n\r\nexport default HomePageItem;","import styled from '@emotion/styled'\r\n\r\nexport const List = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 290px);\r\n  gap: 30px;\r\n  list-style: none;\r\n  justify-content: center;\r\n  padding: 0;\r\n`; ","// import { Link, useLocation } from 'react-router-dom';\r\nimport React from 'react';\r\nimport HomePageItem from '../HomePageItem'\r\nimport { List } from './HomePage.styles'\r\nimport defaultImg from '../../images/noImageAvailable.jpg'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst HomePageList = ({ items }) => {\r\n   \r\n   return (\r\n      <List>\r\n         {items.map(({ poster_path, id, title }) =>\r\n\r\n   \r\n            <HomePageItem\r\n               key={\r\n                  id \r\n                     \r\n                 \r\n               }\r\n               id={id}\r\n               poster_path={\r\n                   poster_path ?\r\n                     `https://image.tmdb.org/t/p/w500${poster_path}`\r\n                     : defaultImg\r\n               }\r\n               title={title}\r\n              \r\n            />\r\n            )}\r\n      </List>\r\n  \r\n   )\r\n\r\n}\r\n\r\nHomePageList.protoType = { \r\n   items: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n      poster_path: PropTypes.string.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired\r\n      \r\n   })\r\n   )\r\n}\r\n\r\nexport default HomePageList;\r\n\r\n","import styled from '@emotion/styled';\r\n\r\nexport const SearchbarContainer = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 44px;\r\n  width: 100%;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 7px;\r\n  padding-bottom: 7px;\r\n  color: #fff;\r\n  background-color: grey;\r\n//   box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n//     0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n   //  border: 1px solid grey;\r\n       margin: 0 auto;\r\n`;\r\n\r\nexport const SearchForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n   border: 1px solid grey;\r\n`;\r\n\r\nexport const SearchFormButton = styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  outline: none;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const SearchFormButtonLabel = styled.label`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nexport const SearchFormInput = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 22px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n  &::placeholder {\r\n    font: inherit;\r\n    font-size: 20px;\r\n  }\r\n`;","import {\r\n  SearchbarContainer,\r\n  SearchForm,\r\n  SearchFormButton,\r\n  SearchFormButtonLabel,\r\n  SearchFormInput,\r\n} from './MoviesForm.styles';\r\nimport PropTypes from 'prop-types';\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\nimport { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nconst MoviesForm = ({onSubmit}) => {\r\n   const [searchQuery, setSearchQuery] = useState('');\r\n   \r\n    const handleImgChange = e => {\r\n    setSearchQuery(e.currentTarget.value);\r\n   };\r\n   \r\n    const handelSubmit = e => {\r\n    e.preventDefault();\r\n    if (searchQuery.trim() === '') {\r\n      toast.warn('ðŸ¦„ Please, enter text !', {\r\n        position: 'top-right',\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n         progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n\r\n    onSubmit(searchQuery);\r\n\r\n  };\r\n   return (\r\n       <SearchbarContainer>\r\n      <SearchForm onSubmit={handelSubmit}>\r\n        <SearchFormButton type=\"submit\">\r\n          <SearchFormButtonLabel>\r\n            {<AiOutlineSearch size={24} />}\r\n          </SearchFormButtonLabel>\r\n        </SearchFormButton>\r\n\r\n        <SearchFormInput\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n               value={searchQuery}\r\n                  onChange={handleImgChange}\r\n        />\r\n      </SearchForm>\r\n    </SearchbarContainer>\r\n   )\r\n}\r\n\r\nMoviesForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired\r\n}\r\nexport default MoviesForm;","import styled from '@emotion/styled'\r\n\r\nexport const Button = styled.button`\r\ndisplay: block;\r\nmargin-left:auto;\r\nmargin-right: auto;\r\nbackground-color:grey;\r\nborder: none;\r\npadding:5px;\r\nmargin-top:20px;\r\nmargin-bottom: 20px;\r\ncolor: #fff;\r\nborder-radius:4px;\r\nfont-size: 22px;\r\n transform: scale(1);\r\n&:hover{\r\n  transform: scale(1.05);\r\n      transition-duration: 250ms;\r\n      color: blue;\r\n}\r\n`;","import MoviesForm from \"component/MoviesForm\";\r\nimport HomePageList from \"component/HomePageList\";\r\nimport {Button} from './MoviesPage.styles'\r\nimport { toast } from 'react-toastify';\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport { useLocation, useSearchParams } from 'react-router-dom';\r\n\r\n\r\nconst API_KEY = '0754829cbe2d4a3d2043b315bf2671de'\r\nconst MoviesPage = () => {\r\n  //  const [searchQuery, setSearchQuery] = useState('');\r\n   const [page, setPage] = useState(1);\r\n   const [movie, setMovie] = useState([]);\r\n   const [searchParams, setSearchParams] = useSearchParams();\r\n   \r\n  // const location = useLocation();\r\n \r\n  \r\n  // const history = useSearchParams();\r\n \r\n  const paramsQuery = searchParams.get('query') ?? '';\r\n\r\n\r\n \r\n  //  const firstFetch = useRef(true);\r\n\r\n   useEffect(() => {\r\n//  if (firstFetch.current) {\r\n//       firstFetch.current = false;\r\n//       return;\r\n//     }\r\n      if (!paramsQuery) {\r\n      return;\r\n    }\r\n\r\n      fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${paramsQuery}&page=${page}&include_adult=false`)\r\n         .then(response => response.json())\r\n         .then(({ results }) => {\r\n              if (results.length === 0) {\r\n        toast.error('ERROR', {\r\n          theme: 'colored',\r\n        });\r\n      }\r\n            \r\n          return setMovie(prev => [...prev, ...results])\r\n         })\r\n   }, [paramsQuery, page])\r\n  \r\n   const addFilm = () => {\r\nsetPage(prev => prev + 1)\r\n   }\r\n\r\n    const handelFormSubmit = searchQuery => {\r\n    // setSearchQuery(searchQuery);\r\n   //  setStatus('pending');\r\n     setMovie([]);\r\n      setPage(1);\r\n      setSearchParams({ query: searchQuery })\r\n  };\r\n\r\n   const btn = (movie.length >= 20)\r\n   return (\r\n      <>\r\n      <MoviesForm onSubmit={handelFormSubmit}/>\r\n         <HomePageList items={movie} />\r\n       {btn && <Button onClick={addFilm}>Load more</Button>}\r\n      \r\n      </>\r\n      )\r\n}\r\n\r\nexport default MoviesPage;"],"names":["Item","styled","Link","Title","Img","poster_path","title","id","to","src","alt","List","HomePageList","items","map","defaultImg","protoType","PropTypes","SearchbarContainer","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","onSubmit","useState","searchQuery","setSearchQuery","e","preventDefault","trim","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","type","size","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","Button","page","setPage","movie","setMovie","useSearchParams","searchParams","setSearchParams","paramsQuery","get","useEffect","fetch","then","response","json","results","length","theme","prev","btn","query","onClick"],"sourceRoot":""}