{"version":3,"file":"static/js/reviews.45709df8.chunk.js","mappings":"sOAEaA,E,MAAOC,EAAAA,GAAH,8C,SC4BjB,EA3BoB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACG,wBAEMA,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACT,UAACN,EAAD,YACG,oCAAYI,MACZ,uBAAIC,MAFIC,SC2B1B,EA9BgB,WACb,IACQC,GADSC,EAAAA,EAAAA,MAATC,KACeC,MAAM,cAAc,GAC3C,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOT,EAAP,KAAgBU,EAAhB,KAaA,OAZAC,EAAAA,EAAAA,YAAU,WACPC,MAAM,sCAAD,OAAuCP,EAAvC,4EACDQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,YAAkB,IAAfG,EAAc,EAAdA,QAMN,OALuB,IAAnBA,EAAQC,QAChBC,EAAAA,GAAAA,MAAY,4CAA6C,CACvDC,MAAO,YAGET,EAAWM,QAExB,CAACX,KAED,8BACuB,IAAnBL,EAAQiB,QAEN,uEAEA,SAAC,EAAD,CAAajB,QAASA","sources":["component/ReviewsList/ReviewsList.styles.js","component/ReviewsList/ReviewsList.jsx","component/Reviews/Reviews.jsx"],"sourcesContent":["import styled from '@emotion/styled'\r\n\r\nexport const Item = styled.li`\r\n margin-right: 50px;\r\n`","import { Item } from './ReviewsList.styles'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ReviewsList = ({ reviews }) => {\r\n   return (\r\n      <ul>\r\n        {\r\n            reviews.map(({ author, content, id }) =>\r\n               <Item key={id}>\r\n                  <b>Author: {author}</b>\r\n                  <p>{content}</p>\r\n         </Item>\r\n         \r\n         )}\r\n\r\n      </ul>\r\n   )\r\n}\r\n\r\nReviewsList.propTypes = {\r\n   reviews: PropTypes.arrayOf(\r\n     PropTypes.shape({\r\n        author: PropTypes.string.isRequired,\r\n        content: PropTypes.string.isRequired,\r\n        id: PropTypes.string.isRequired\r\n     })\r\n  )\r\n   // reviews: PropTypes.array\r\n}\r\n\r\nexport default ReviewsList;","import { useParams } from \"react-router-dom\"\r\nimport { useState, useEffect } from \"react\"\r\nimport { toast } from 'react-toastify';\r\nimport ReviewsList from \"component/ReviewsList\"\r\n\r\nconst Reviews = () => {\r\n   const { slug } = useParams();\r\n     const matchId = slug.match(/[a-z0-9]+$/)[0]\r\n   const [reviews, setReviews] = useState([])\r\n   useEffect(() => {\r\n      fetch(`https://api.themoviedb.org/3/movie/${matchId}/reviews?api_key=0754829cbe2d4a3d2043b315bf2671de&language=en-US&page=1`)\r\n         .then(response => response.json())\r\n         .then(({ results }) => {\r\n            if (results.length === 0) {\r\n        toast.error('We do not have any reviews for this movie', {\r\n          theme: 'colored',\r\n        });\r\n      }\r\n            return setReviews(results)\r\n         })\r\n   }, [matchId])\r\n   return (\r\n      <>\r\n         {reviews.length === 0 ? \r\n            \r\n            <h3>We don't have any reviews for this movie.</h3>\r\n            :\r\n            <ReviewsList reviews={reviews} />\r\n            \r\n         }\r\n      \r\n      </>\r\n   ) \r\n}\r\n\r\nexport default Reviews"],"names":["Item","styled","reviews","map","author","content","id","matchId","useParams","slug","match","useState","setReviews","useEffect","fetch","then","response","json","results","length","toast","theme"],"sourceRoot":""}